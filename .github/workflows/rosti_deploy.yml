name: Deploy into Roští.cz

on:
  workflow_run:
    workflows: ["Sync, build and deploy Plasmic app"] # Replace with your Plasmic workflow name
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      HOST: ssh.rosti.cz
      USER: app
      PORT: 10005
      NODE_VERSION: 22.9.0

    steps:
      # Step 1: Checkout the GitHub repository to get the latest code
      - uses: actions/checkout@v3

      # Step 2: Set up Node.js (Install Node.js specified version)
      - uses: actions/setup-node@v3
        with:
          node-version: "v22.9.0"

      # Step 3: Set up SSH key for server access
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.ROSTI_DEPLOY_SSH_KEY }}

      # Step 4: Setup SSH known hosts to prevent connection issues
      - name: Setup hostkey
        run: |
          echo "ssh.rosti.cz ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDUsNXCnANkKPlxYe//zFpV+N0s4Ay+2SEg8bTj+7iIJM8XbLviBYx0dIRb2DVD7kKjmIjCLijd6Pmn6g17jbGDUB/CMrJ+A+XcyDZYvGUDGzt0QcUksFoSFqJQo3u/MLr2pa3eyO34zfOS6M6nTCIvp48iNzQAdc5B9ziEaUbxiuiVru7UMVr2Rv12sFSarRacXCE4URsetXuZ077AzJ67ZKJYH1gU6QCk4qal8R9xrkDep4LmFSUTr1oKiNaLTJlrZ69N9+A+hJX6XdpZ7dIke+NbLaqTWJZq+esGQmF+SdsGoVtBM+8aQPyazxSJAQOB+j4pbOGrLlZFhfS6tqzx" > ./known_hosts

      # Step 5: Set environment variables (from GitHub Secrets)
      - name: env
        run: |
          cat << EOF > .env
          ${{ secrets.ENV }}
          EOF

      # Step 6: Install dependencies (node_modules)
      - name: Dependencies
        run: |
          npm install

      # Step 7: Build the application (Create production build)
      - name: Build
        run: |
          npm run build

      # Step 8: Setup Node.js on the server
      - name: Setup Node.js
        run: |
          ssh -o UserKnownHostsFile=./known_hosts -p $PORT $USER@$HOST /usr/local/bin/rosti node $NODE_VERSION

      # Step 9: Configure Supervisor to manage the app process
      - name: Setup Supervisord
        run: |
          cat << EOF > rosti.app.conf
          [program:app]
          command=/srv/bin/primary_tech/npm start
          environment=PATH="/srv/bin/primary_tech:/usr/local/bin:/usr/bin:/bin:/srv/.npm-packages/bin"
          stopasgroup=true
          directory=/srv/app
          process_name=app
          autostart=true
          autorestart=true
          stdout_logfile=/srv/log/node.log
          stdout_logfile_maxbytes=2MB
          stdout_logfile_backups=5
          stdout_capture_maxbytes=2MB
          stdout_events_enabled=false
          redirect_stderr=true
          EOF
          scp -o UserKnownHostsFile=./known_hosts -P $PORT rosti.app.conf $USER@$HOST:/srv/conf/supervisor.d/app.conf
          rm rosti.app.conf

      # Step 10: Configure Nginx for reverse proxy
      - name: Setup Nginx
        run: |
          cat << EOF > rosti.nginx.conf
          server {
              listen       0.0.0.0:8000;
              listen       [::]:8000;
              location / {
                      proxy_pass         http://127.0.0.1:8080/;
                      proxy_redirect     default;
                      proxy_set_header   X-Real-IP  \$remote_addr;
                      proxy_set_header   Host       \$host;
              }
              location /static/ {
                      alias /srv/app/public/;
              }
          }
          EOF
          scp -o UserKnownHostsFile=./known_hosts -P $PORT rosti.nginx.conf $USER@$HOST:/srv/conf/nginx.d/app.conf
          rm rosti.nginx.conf

      # Step 11: Copy the code (sync repository to the server)
      - name: Copy code
        run: |
          rsync -ae "ssh -o UserKnownHostsFile=./known_hosts -p $PORT" --exclude=.git ./ $USER@$HOST:/srv/app/

      # Step 12: Apply Supervisor and Nginx changes (reload services)
      - name: Apply changes
        run: |
          ssh -o UserKnownHostsFile=./known_hosts -p $PORT $USER@$HOST supervisorctl reread
          ssh -o UserKnownHostsFile=./known_hosts -p $PORT $USER@$HOST supervisorctl restart app
          ssh -o UserKnownHostsFile=./known_hosts -p $PORT $USER@$HOST supervisorctl restart nginx
